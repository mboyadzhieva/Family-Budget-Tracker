@model FBT.MVC.Models.ExpenseModel

@{
    if (Model != null)
    {
        <h2>Edit Expense</h2>
        <input type="hidden" name="id" value="@Model.Id" />
        <input type="hidden" name="id" value="@Model.IsRecurring" />
    }
    else
    {
        <h2>Create Expense</h2>
    }

    List<SelectListItem> expenseTypes = new List<SelectListItem>();
    expenseTypes.Add(new SelectListItem
            {
                Text = "Subscription",
                Value = "Subscription"
            });
    expenseTypes.Add(new SelectListItem
            {
                Text = "Mortgage",
                Value = "Mortgage"
            });
    expenseTypes.Add(new SelectListItem
            {
                Text = "Credit Card",
                Value = "CreditCard"
            });
    expenseTypes.Add(new SelectListItem
            {
                Text = "Car Payment",
                Value = "CarPayment"
            });
    expenseTypes.Add(new SelectListItem
            {
                Text = "Tuition",
                Value = "Tuition"
            });
    expenseTypes.Add(new SelectListItem
            {
                Text = "Rent",
                Value = "Rent"
            });
    expenseTypes.Add(new SelectListItem
            {
                Text = "Purchase",
                Value = "Purchase"
            });
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @type = "number", @step="0.01", @min="0" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpenseType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ExpenseType, expenseTypes, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PaymentDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PaymentDate, "", new { @class = "text-danger" })
            </div>
        </div>

        @{
            if (Model == null)
            {
                <div class="form-check">
                    @Html.LabelFor(model => model.IsRecurring, htmlAttributes: new { @class = "form-conrol form-check-label" })
                    @Html.EditorFor(model => model.IsRecurring, new { @class = "form-conrol form-check-input" })
                </div>
            }
        }


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @{
                    if (Model == null)
                    {
                        <input type="submit" value="Create" class="btn btn-default" />
                    }
                    else
                    {
                        <input type="submit" value="Edit" class="btn btn-default" />
                    }
                }
            </div>
        </div>
    </div>
}